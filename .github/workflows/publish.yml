---
name: Publish

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PR_NUMBER: ${{ github.event.number }}
  ACTOR: ${{ github.actor }}

concurrency:
  group: publish
  cancel-in-progress: false

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Start test database
        run: docker run -d --rm --name huo-db -p 3399:3306 -e MYSQL_DATABASE=huo -e MYSQL_USER=huo_app -e MYSQL_PASSWORD=test -e MYSQL_RANDOM_ROOT_PASSWORD=true -v $(pwd)/scripts/mysql:/docker-entrypoint-initdb.d mysql:8

      - name: Node setup
        uses: actions/setup-node@v3.5.0
        with:
          node-version: 14
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for db initialization
        run: sleep 10

      - name: Run tests
        run: npm test

      - name: Stop test database
        run: docker container rm -f huo-mysql

      - name: Code coverage
        run: npm run coverage

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
  tag:
    name: Tag
    needs: unit-tests
    runs-on: ubuntu-latest
    concurrency:
      group: tag
      cancel-in-progress: false
    outputs:
      new_tag: ${{ steps.pushtag.outputs.new_tag }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Push new tag
        id: pushtag
        # v1.51.0 does not create tags with PR suffix
        uses: anothrNick/github-tag-action@1.44.0
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: PATCH
          PRERELEASE_SUFFIX: PR${{ env.PR_NUMBER }}

      - name: Add tag to summary
        run: echo 'Tag `${{ steps.pushtag.outputs.new_tag }}`' >> $GITHUB_STEP_SUMMARY

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: tag
    permissions:
      contents: read
      packages: write
    outputs:
      new_tag: ${{ steps.new_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.ACTOR }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.tag.outputs.new_tag }}

      - name: Set image name
        id: image_name
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            REVISION=${{ needs.tag.outputs.new_tag }}
          labels: ${{ steps.meta.outputs.labels }}, ${{ steps.image_name.outputs.lowercase }}:latest

      - name: Set output
        id: new_tag
        run: echo ::set-output name=new_tag::${{ needs.tag.outputs.new_tag }}
